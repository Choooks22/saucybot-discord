name: 'Continuous Deployment'

on:
  push:
    tags: 'v*'

jobs:
  release:
    name: 'Create Release'
    runs-on: ubuntu-latest
    steps:
      - name: 'Create Release'
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  package:
    name: 'Publish Container'
    runs-on: ubuntu-latest
    steps:
      # Setup working environment for Docker
      - uses: actions/checkout@v2
      - id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/sn0wcrack/saucybot-discord
          tag-match: v(.*)
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: 'Cache Buildx Cache'
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: 'Login to Container Registry'
        uses: docker/login-action@v1
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.RELEASE_TOKEN }}
          registry: ghcr.io
      - name: 'Build and Publish'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
